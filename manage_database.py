import os
import re
import mysql.connector
import utils
import secrets


def manage_database(wp_config_path, root_password):
	"""Manage database: create new user, update wp-config.php, and remove old users."""
	site_name = os.path.basename(os.path.dirname(wp_config_path))
	db_user, db_password, db_name = get_db_credentials(wp_config_path)
	new_db_user, new_db_password = create_new_db_user(db_name, site_name, root_password)
	
	# Update wp-config.php with new credentials
	update_wp_config(wp_config_path, new_db_user, new_db_password)
	
	# Remove old users
	remove_old_db_users(db_name, root_password, new_db_user)
	
	utils.log_action(site_name, "Database management completed.")


def get_db_credentials(wp_config_path):
	"""Extract DB_USER, DB_PASSWORD, and DB_NAME from wp-config.php."""
	db_user = None
	db_password = None
	db_name = None
	with open(wp_config_path, 'r') as file:
		for line in file:
			if "DB_USER" in line:
				db_user = re.search(r"define\(\s*'DB_USER'\s*,\s*'(.+?)'\s*\);", line).group(1)
			if "DB_PASSWORD" in line:
				db_password = re.search(r"define\(\s*'DB_PASSWORD'\s*,\s*'(.+?)'\s*\);", line).group(1)
			if "DB_NAME" in line:
				db_name = re.search(r"define\(\s*'DB_NAME'\s*,\s*'(.+?)'\s*\);", line).group(1)
	return db_user, db_password, db_name


def create_new_db_user(db_name, site_name, root_password):
	"""Create a new database user with a secure password."""
	new_db_user = f'user_{secrets.token_hex(8)}_{site_name}'
	new_db_password = secrets.token_urlsafe(16)
	cnx = mysql.connector.connect(user='root', password=root_password)
	cursor = cnx.cursor()
	cursor.execute(f"CREATE USER '{new_db_user}'@'localhost' IDENTIFIED BY '{new_db_password}';")
	cursor.execute(f"GRANT ALL PRIVILEGES ON {db_name}.* TO '{new_db_user}'@'localhost';")
	cursor.execute("FLUSH PRIVILEGES;")
	cursor.close()
	cnx.close()
	return new_db_user, new_db_password


def update_wp_config(wp_config_path, new_db_user, new_db_password):
	"""Update wp-config.php with the new database credentials."""
	with open(wp_config_path, 'r') as file:
		config_content = file.read()
	config_content = re.sub(r"define\(\s*'DB_USER'\s*,\s*'(.+?)'\s*\);", f"define('DB_USER', '{new_db_user}');",
	                        config_content)
	config_content = re.sub(r"define\(\s*'DB_PASSWORD'\s*,\s*'(.+?)'\s*\);",
	                        f"define('DB_PASSWORD', '{new_db_password}');", config_content)
	with open(wp_config_path, 'w') as file:
		file.write(config_content)


def remove_old_db_users(db_name, root_password, new_db_user):
	"""Remove old database users except for root and the new user."""
	cnx = mysql.connector.connect(user='root', password=root_password)
	cursor = cnx.cursor()
	cursor.execute("SELECT user FROM mysql.user;")
	users = [row[0] for row in cursor.fetchall()]
	for user in users:
		if user not in ('root', new_db_user):
			cursor.execute(f"DROP USER '{user}'@'localhost';")
	cursor.execute("FLUSH PRIVILEGES;")
	cursor.close()
	cnx.close()


if __name__ == "__main__":
	import sys
	
	wp_config_path = sys.argv[1]
	root_password = sys.argv[2]
	manage_database(wp_config_path, root_password)
