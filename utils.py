import os
import re
import shutil
import requests
import logging
import mysql.connector


def setup_logging(site_name):
	"""Setup logging for a given site."""
	log_file = f"/opt/wordpress-malware-remover/logs/{site_name}.log"
	logging.basicConfig(filename=log_file, level=logging.INFO,
	                    format='%(asctime)s %(message)s')
	logging.info("\n\n" + "-" * 80 + "\n\n")


def log_action(site_name, message):
	"""Log an action for a given site."""
	logging.info(message)


def get_wordpress_version(wp_install_path):
	"""Extract the WordPress version from the site."""
	version_file_path = os.path.join(wp_install_path, 'wp-includes', 'version.php')
	if not os.path.exists(version_file_path):
		raise FileNotFoundError(f"No such file or directory: '{version_file_path}'")
	with open(version_file_path, 'r') as file:
		content = file.read()
		version = re.search(r"\$wp_version = '(.+?)';", content).group(1)
	return version


def get_wordpress_language_from_db(wp_config_path, db_root_password):
	"""Extract the WordPress language from the database."""
	db_name = None
	db_user = None
	db_password = None
	with open(wp_config_path, 'r') as file:
		for line in file:
			if line.strip().startswith('//'):
				continue  # Ignorar linhas comentadas
			if "DB_NAME" in line:
				db_name = re.search(r"define\(\s*'DB_NAME'\s*,\s*'(.+?)'\s*\);", line).group(1)
			if "DB_USER" in line:
				db_user = re.search(r"define\(\s*'DB_USER'\s*,\s*'(.+?)'\s*\);", line).group(1)
			if "DB_PASSWORD" in line:
				db_password = re.search(r"define\(\s*'DB_PASSWORD'\s*,\s*'(.+?)'\s*\);", line).group(1)
	
	if not db_name or not db_user or not db_password:
		raise ValueError("Database credentials not found in wp-config.php")
	
	try:
		cnx = mysql.connector.connect(user=db_user, password=db_password, database=db_name)
		cursor = cnx.cursor()
		cursor.execute("SELECT option_value FROM wp_options WHERE option_name = 'WPLANG'")
		result = cursor.fetchone()
		cursor.close()
		cnx.close()
		if result:
			return result[0] if result[0] else 'en_US'
		else:
			return 'en_US'
	except mysql.connector.Error as err:
		log_action(db_name, f"Error fetching language from database: {err}")
		raise


def choose_wordpress_language():
	"""Prompt the user to choose a language for the WordPress version."""
	languages = {
		'1': 'en_US',
		'2': 'es_ES',
		'3': 'de_DE',
		'4': 'fr_FR',
		'5': 'it_IT',
		'6': 'ja',
		'7': 'pt_BR'
	}
	
	print("Available languages:")
	print("1. English (United States)")
	print("2. Spanish (Spain)")
	print("3. German")
	print("4. French")
	print("5. Italian")
	print("6. Japanese")
	print("7. Portuguese (Brazil)")
	
	choice = input("Enter the number of the language to use: ").strip()
	return languages.get(choice, 'en_US')


def download_wordpress_version(version, language):
	"""Download the specified WordPress version in the specified language."""
	download_url = f"https://{language}.wordpress.org/wordpress-{version}-{language}.tar.gz"
	download_path = f'/opt/wordpress-malware-remover/downloads/wordpress-{version}-{language}.tar.gz'
	response = requests.get(download_url, stream=True)
	
	with open(download_path, 'wb') as file:
		for chunk in response.iter_content(chunk_size=8192):
			file.write(chunk)
	
	extract_path = f'/opt/wordpress-malware-remover/wordpress/{version}'
	shutil.unpack_archive(download_path, extract_path)

