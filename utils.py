import os
import re
import shutil
import requests
import logging
import mysql.connector

def setup_logging(site_name):
    """Setup logging for a given site."""
    log_file = f"/opt/wordpress-malware-remover/logs/{site_name}.log"
    logging.basicConfig(filename=log_file, level=logging.INFO,
                        format='%(asctime)s %(message)s')
    logging.info("\n\n" + "-" * 80 + "\n\n")

def log_action(site_name, message):
    """Log an action for a given site."""
    logging.info(message)

def get_wordpress_version(wp_install_path):
    """Extract the WordPress version from the site."""
    version_file_path = os.path.join(wp_install_path, 'wp-includes', 'version.php')
    if not os.path.exists(version_file_path):
        raise FileNotFoundError(f"No such file or directory: '{version_file_path}'")
    with open(version_file_path, 'r') as file:
        content = file.read()
        version = re.search(r"\$wp_version = '(.+?)';", content).group(1)
    return version

def get_wordpress_language_from_db(wp_config_path, root_password):
    """Extract the WordPress language from the database."""
    db_user, db_password, db_name = get_db_credentials(wp_config_path)
    cnx = mysql.connector.connect(user='root', password=root_password, database=db_name)
    cursor = cnx.cursor()
    cursor.execute("SELECT option_value FROM wp_options WHERE option_name = 'WPLANG'")
    result = cursor.fetchone()
    cursor.close()
    cnx.close()
    if result:
        return result[0]
    else:
        return 'en_US'

def get_db_credentials(wp_config_path):
    """Extract DB_USER, DB_PASSWORD, and DB_NAME from wp-config.php."""
    db_user = None
    db_password = None
    db_name = None
    with open(wp_config_path, 'r') as file:
        for line in file:
            if line.strip().startswith('//'):
                continue  # Ignorar linhas comentadas
            if "DB_USER" in line:
                db_user = re.search(r"define\(\s*'DB_USER'\s*,\s*'(.+?)'\s*\);", line).group(1)
            if "DB_PASSWORD" in line:
                db_password = re.search(r"define\(\s*'DB_PASSWORD'\s*,\s*'(.+?)'\s*\);", line).group(1)
            if "DB_NAME" in line:
                db_name = re.search(r"define\(\s*'DB_NAME'\s*,\s*'(.+?)'\s*\);", line).group(1)
    return db_user, db_password, db_name

def download_wordpress_version(version, language, download_path):
    """Download the specified WordPress version in the specified language."""
    download_url = f"https://{language}.wordpress.org/wordpress-{version}-{language}.tar.gz"
    response = requests.get(download_url, stream=True)
    with open(download_path, 'wb') as file:
        for chunk in response.iter_content(chunk_size=8192):
            file.write(chunk)
    extract_path = f'/opt/wordpress-malware-remover/wordpress/{version}'
    shutil.unpack_archive(download_path, extract_path)

def get_installed_plugins(wp_install_path):
    """Get a list of installed plugins."""
    plugins_dir = os.path.join(wp_install_path, 'wp-content', 'plugins')
    plugins = [d for d in os.listdir(plugins_dir) if os.path.isdir(os.path.join(plugins_dir, d))]
    return '\n'.join(plugins)

def get_installed_themes(wp_install_path):
    """Get a list of installed themes."""
    themes_dir = os.path.join(wp_install_path, 'wp-content', 'themes')
    themes = [d for d in os.listdir(themes_dir) if os.path.isdir(os.path.join(themes_dir, d))]
    return '\n'.join(themes)

def run_command(command):
    """Run a system command and log the output."""
    result = os.system(command)
    logging.info(f"Command: {command}\nResult: {result}")

def progress_bar(total, current):
    """Display a progress bar."""
    bar_length = 50
    progress = current / total
    block = int(bar_length * progress)
    bar = '#' * block + '-' * (bar_length - block)
    print(f'\r[{bar}] {current}/{total}', end='')

if __name__ == "__main__":
    # Test functions if necessary
    pass
