import os
import shutil
import tarfile
import utils
from datetime import datetime


def sanitize_site_name(site_name):
	"""Remove common TLDs from the site name."""
	return site_name.split('.')[0]


def backup_site(site_path, wp_config_path, wp_install_path):
	"""Backup the site's htdocs directory and database."""
	base_dir = os.path.dirname(os.path.abspath(__file__))
	site_name = sanitize_site_name(os.path.basename(site_path))
	timestamp = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
	
	backup_dir = os.path.join(base_dir, f"backups/{site_name}")
	if not os.path.exists(backup_dir):
		os.makedirs(backup_dir)
	
	utils.log_action(site_name, "Backing up htdocs directory.")
	
	# Backup htdocs directory with progress bar
	htdocs_backup_path = os.path.join(backup_dir, f"{site_name}_{timestamp}.htdocs_backup.tar.gz")
	total_files = sum([len(files) for r, d, files in os.walk(wp_install_path)])
	current_files = 0
	
	with tarfile.open(htdocs_backup_path, "w:gz") as tar:
		for root, dirs, files in os.walk(wp_install_path):
			for file in files:
				fullpath = os.path.join(root, file)
				tar.add(fullpath, arcname=os.path.relpath(fullpath, wp_install_path))
				current_files += 1
				utils.progress_bar(total_files, current_files)
	
	print()  # To move to the next line after the progress bar is complete
	
	utils.log_action(site_name, "Backing up database.")
	# Backup database
	db_backup_path = os.path.join(backup_dir, f"{site_name}_{timestamp}.db_backup.sql")
	db_user, db_password = utils.get_db_user_from_wp_config(wp_config_path)
	utils.run_command(f"mysqldump -u {db_user} -p{db_password} {db_user} > {db_backup_path}")
	
	# Log installed plugins and themes
	utils.log_action(site_name, "Logging installed plugins and themes.")
	plugins_log_path = os.path.join(base_dir, f"logs/{site_name}/installed_plugins.txt")
	themes_log_path = os.path.join(base_dir, f"logs/{site_name}/installed_themes.txt")
	os.makedirs(os.path.dirname(plugins_log_path), exist_ok=True)
	
	with open(plugins_log_path, 'w') as plugins_log:
		plugins_log.write(utils.get_installed_plugins(wp_install_path))
	
	with open(themes_log_path, 'w') as themes_log:
		themes_log.write(utils.get_installed_themes(wp_install_path))
	
	utils.log_action(site_name, "Site and database backed up, plugins and themes logged.")


if __name__ == "__main__":
	import sys
	
	site_path = sys.argv[1]
	utils.setup_logging(site_path)
	backup_site(site_path)
