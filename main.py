import os
import sys
import configparser
import utils
import getpass


def main():
	base_dir = os.path.dirname(os.path.abspath(__file__))
	
	# Load configuration
	config = configparser.ConfigParser()
	config.read(os.path.join(base_dir, 'config.ini'))
	
	sites_path = config['DEFAULT']['sites_path']
	wp_config_dir_template = config['DEFAULT']['wp_config_dir_template']
	wp_install_dir_template = config['DEFAULT']['wp_install_dir_template']
	
	# Create necessary directories if they don't exist
	directories = ['logs', 'wordpress', 'downloads', 'backups']
	for directory in directories:
		path = os.path.join(base_dir, directory)
		if not os.path.exists(path):
			os.makedirs(path)
	
	if '--update-wordpress' in sys.argv:
		import update_wordpress
		update_wordpress.update_wordpress()
		return
	
	if '-a' in sys.argv:
		sites = [d for d in os.listdir(sites_path) if os.path.isdir(os.path.join(sites_path, d))]
	else:
		sites = [d for d in os.listdir(sites_path) if os.path.isdir(os.path.join(sites_path, d))]
		print("Available sites:")
		for i, site in enumerate(sites):
			print(f"{i + 1}. {site}")
		
		choice = int(input("Enter the number of the site to process: ")) - 1
		sites = [sites[choice]]
	
	root_password = getpass.getpass("Enter root password for the database: ")
	
	for site in sites:
		site_path = os.path.join(sites_path, site)
		utils.setup_logging(site)
		utils.log_action(site, "Starting maintenance.")
		
		wp_config_dir = wp_config_dir_template.replace('{{site_dir}}', site)
		wp_config_path = os.path.join(wp_config_dir, 'wp-config.php')
		wp_install_dir = wp_install_dir_template.replace('{{site_dir}}', site)
		
		utils.log_action(site, "Starting backup.")
		import backup
		backup.backup_site(site_path, wp_config_path, wp_install_dir)
		
		utils.log_action(site, "Fixing permissions.")
		import fix_permissions
		fix_permissions.fix_permissions(wp_install_dir)
		
		utils.log_action(site, "Replacing WordPress directories.")
		import replace_wordpress
		replace_wordpress.replace_wordpress_directories(wp_install_dir)
		
		utils.log_action(site, "Managing database.")
		import manage_database
		manage_database.manage_database(wp_config_path, root_password)
		
		utils.log_action(site, "Maintenance completed.")


if __name__ == "__main__":
	main()
