import shutil
import os
import re
import utils
import requests


def replace_wordpress_directories(site_path):
	"""Replace wp-includes and wp-admin directories with the new version."""
	wp_includes_path = os.path.join(site_path, 'wp-includes')
	wp_admin_path = os.path.join(site_path, 'wp-admin')
	
	# Remove old directories if they exist
	if os.path.exists(wp_includes_path):
		shutil.rmtree(wp_includes_path)
	if os.path.exists(wp_admin_path):
		shutil.rmtree(wp_admin_path)
	
	# Copy new WordPress files
	try:
		wordpress_version = get_wordpress_version(site_path)
	except FileNotFoundError:
		print("Could not detect the WordPress version.")
		wordpress_version = input("Please specify the WordPress version to use: ").strip()
	
	wordpress_source = f'/opt/wordpress-malware-remover/wordpress/{wordpress_version}/wordpress'
	
	if not os.path.exists(wordpress_source):
		user_choice = input(
			f"WordPress version {wordpress_version} not found. Do you want to download it? (y/n): ").strip().lower()
		if user_choice == 'y':
			download_wordpress_version(wordpress_version)
		else:
			print("Operation aborted by the user.")
			return
	
	copy_with_progress(os.path.join(wordpress_source, 'wp-includes'), wp_includes_path)
	copy_with_progress(os.path.join(wordpress_source, 'wp-admin'), wp_admin_path)
	
	utils.log_action(site_path, "WordPress directories replaced.")


def get_wordpress_version(site_path):
	"""Extract the WordPress version from the site."""
	version_file_path = os.path.join(site_path, 'wp-includes', 'version.php')
	if not os.path.exists(version_file_path):
		raise FileNotFoundError(f"No such file or directory: '{version_file_path}'")
	with open(version_file_path, 'r') as file:
		content = file.read()
		version = re.search(r"\$wp_version = '(.+?)';", content).group(1)
	return version


def download_wordpress_version(version):
	"""Download the specified WordPress version."""
	download_url = f"https://wordpress.org/wordpress-{version}.tar.gz"
	download_path = f'/opt/wordpress-malware-remover/downloads/wordpress-{version}.tar.gz'
	response = requests.get(download_url, stream=True)
	
	with open(download_path, 'wb') as file:
		for chunk in response.iter_content(chunk_size=8192):
			file.write(chunk)
	
	extract_path = f'/opt/wordpress-malware-remover/wordpress/{version}'
	shutil.unpack_archive(download_path, extract_path)


def copy_with_progress(src, dst):
	"""Copy directory with progress bar."""
	total_items = sum([len(dirs) + len(files) for _, dirs, files in os.walk(src)])
	processed_items = [0]  # Using list to mutate within nested function
	
	def copy_function(src, dst):
		shutil.copy2(src, dst)
		processed_items[0] += 1
		utils.progress_bar(total_items, processed_items[0])
	
	shutil.copytree(src, dst, dirs_exist_ok=True, copy_function=copy_function)


if __name__ == "__main__":
	import sys
	
	site_path = sys.argv[1]
	utils.setup_logging(site_path)
	replace_wordpress_directories(site_path)
